$border_side_amount       :1.0;
$border_width_amount    :  $border_side_amount * 2;
$border_radius_amount   : $border_width_amount;
$right_angle                        : 90deg;
$half_turn                            : 180deg;

$truck_width_amount                    : 68.0;
$truck_height_amount                   : $truck_width_amount;
$truck_outer_width_amount         : $truck_width_amount + $border_width_amount;
$body_length_amount                  : 150.0;
$body_half_length_amount                  : $body_length_amount / 2;
$body_half_length_outer:            $body_half_length_amount + $border_side_amount + rem;

$engine_offset_amount                : 18.0;
$diff_engine_amount                    : -2.5;
$engine_height_amount               :  18;
$engine_outer_height_amount: $engine_height_amount + $border_width_amount;

$diff_engine                    : $diff_engine_amount + rem;
$engine_height              : $engine_height_amount + rem;
$engine_outer_height   : $engine_outer_height_amount + rem;
$engine_offset                 : $engine_offset_amount + deg;
$engine_offset_neg        : -$engine_offset_amount + deg;
$engine_width_amount : 17;
$engine_width: $engine_width_amount + rem;

$engine_top_amount: 42;
$engine_top: $engine_top_amount + rem;




//wheels
$wheel_diameter_amount :   27.0;
$wheel_top_amount:              55.0;
$front_wheel_amount:            10.0;
$rear_wheel_amount:            120.0;

//tires
$tire_depth_amount :                5.0;
$tire_diameter_amount:        $wheel_diameter_amount    -    $tire_depth_amount;
$radius_amount:                     $tire_diameter_amount	  /    2;
$tire_width_amount           : 5.0;
$tire_rotation_amount       :  -180 * 5 ;
$tire_move_amount           : $tire_width_amount / 2;
//tire : 220rem
$tire_diameter:      $tire_diameter_amount + rem;
$radius:            $radius_amount + rem;
$tire_top:          $wheel_top_amount + $tire_depth_amount  - 1.2 + rem; //todo figure out where the 12 pixels comes from.
$tire_depth:     $tire_depth_amount + rem;
$wheel:             $wheel_diameter_amount  + rem;
$wheel_top:     $wheel_top_amount + rem;
$front_wheel:   $front_wheel_amount + rem;
$rear_wheel:    $rear_wheel_amount + rem;

$rear : $rear_wheel_amount + $radius_amount + rem;
$front: $radius_amount + $front_wheel_amount + rem;

$border_side: $border_side_amount + rem;
$border_radius: $border_radius_amount + rem;



$body_length: $body_length_amount + $border_side_amount + rem;
$body_half_length: $body_half_length_amount + $border_side_amount + rem;




$truck_width                : $truck_width_amount + rem;
$truck_height               : $truck_height_amount + rem;
$truck_outer_width      : $truck_outer_width_amount + rem;
$truck_width_border  : $truck_width_amount + $border_width_amount + rem;

$tire_width                     : $tire_width_amount + rem;


$tire_rotation                  : $tire_rotation_amount + deg;
$tire_move                      : $tire_move_amount + rem;

$btm_tZ  : -20.0;
$bottom_tZ  : $btm_tZ  + rem;
$browsers : webkit moz ms o spec;


/*
	bottomTransform takes 1 arguement -the body part
	can be:

	Rotation:
	engine                      :  X:-90     Y: 0        z:0
	engine_straight     :   X:90      y: -18      z:0
	body                        :   X:90      y:0            z:0

	Translation:
	engine                      :  X:0     Y: 0        z:680
	engine_straight     :   X:-25    y: -truck width      z:0
	body                        :   X:0      y: -truck width        z:0
*/

$horizontal                      : rotateX($right_angle) rotateY(0) rotateZ($right_angle);
$vertical                           : rotateY($right_angle);

$xRightAngle                   : rotateX($right_angle) rotateY(0) rotateZ(0);
$xRightAngle_negative : rotateX(-$right_angle) rotateY(0) rotateZ(0);
$null_transform                : rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateX(0) translateY(0) translateZ(0);

$xTranslateTruckWidth  : translateX($truck_width) translateY(0) translateZ(0);
$yTranslateTruckWidth  : translateX(0) translateY($truck_width) translateZ(0);
$zTranslateTruckWidth  : translateX(0) translateY(0) translateZ($truck_outer_width);

$xEngineOffset              : rotateX($engine_offset) rotateY(0) rotateZ(0) ;
$yEngineOffset              : rotateX(0) rotateY($engine_offset) rotateZ(0) ;

$xRightAngle_engineOffset: rotateX($right_angle) rotateY($engine_offset) rotateZ(0);
$xTranslateTruckWidth_negative  : translateX(-$truck_width) translateY(0) translateZ(0);
$yTranslateTruckWidth_negative  : translateX(0) translateY(-$truck_width) translateZ(0);
$zTranslateTruckWidth_negative  : translateX(0) translateY(0) translateZ(-$truck_outer_width);

$driverSide_inside: transform, translateZ(-1px );
$driverSide_inside_fixed: translateZ(-1px );

$passengerSide_outside: translateX(0) translateY(0) translateZ($truck_outer_width_amount + rem);
$passengerSide_inside: translateX(0) translateY(0) translateZ($truck_outer_width_amount - 0.1 + rem);




@mixin zEngineOffset(){
	@include prefixer(transform, $zEngineOffset, webkit moz ms o spec );
}




@mixin bottomTransform($part){
	@if $part == body{
		@include prefixer(transform, $xRightAngle_negative  $zTranslateTruckWidth, $browsers);
	}   @else if $part == engine {
		@include prefixer(transform, $xRightAngle_engineOffset

		translateX($diff_engine ) translateY(-$truck_width) translateZ($bottom_tZ), $browsers);
	}   @else   {
		//engine_straight
		@include prefixer(transform, $xRightAngle  translateX(0) translateY(-$truck_width) translateZ($bottom_tZ), $browsers);
	}
}
@mixin topTranform($normal){
	@if $normal == true{
		@include prefixer(transform, $xRightAngle translateX(0) translateY(-$truck_width) translateZ(0), $browsers);
	}   @else   {
		@include prefixer(transform, $xRightAngle_engineOffset  translateX($diff_engine) translateY(-$truck_width) translateZ(0), $browsers);
	}
}


@mixin xRightAngle_yTruckWidth($normal){
	@if $normal == true{
		@include prefixer(transform, $xRightAngle translateY($truck_outer_width), $browsers);
	}   @else   {
		@include prefixer(transform, $xRightAngle_engineOffset  translateX($diff_engine) translateY(-$truck_width_border) translateZ(0), $browsers);
	}
}
@mixin nullTransform(){
	@include prefixer(transform, rotateX(0deg) rotateY(0deg) rotateZ(0deg) translateX(0) translateY(0) translateZ(0), $browsers);
}
@mixin horizontal($translate){
	@include prefixer(transform, $horizontal $translate , $browsers);
}
@mixin vertical($translate){
	@include prefixer(transform, $vertical $translate , $browsers);
}
@mixin driverSide_inside(){
	@include prefixer(transform, translateZ(-1px ), $browsers);
}
@mixin passengerSide_inside(){
	@include prefixer(transform, translateZ(1 - $truck_width_amount + rem), $browsers);
}

@mixin passengerSide($tire, $extra, $inside){
	@if $tire == rear{
		@if $extra == horizontal{
		@include prefixer(transform, translateZ(-$truck_width_amount + $tire_move_amount + rem ) $horizontal , $browsers);
		} @else if $extra == vertical{
			@include prefixer(transform, translateZ(-$truck_width_amount + $tire_move_amount + rem ) $vertical , $browsers);
		} @else {
			@if $inside == inside{
				@include prefixer(transform, translateZ(-1 - $truck_width_amount + $tire_width_amount + rem ) , $browsers);

			} @else {
				@include prefixer(transform, translateZ(-$truck_width_amount + $tire_width_amount + rem ) , $browsers);
			}
		}

	} @else {
		@if $extra == horizontal{
			@include prefixer(transform, translateZ(-$truck_width_amount + rem) $horizontal, $browsers);
		} @else if $extra == vertical{
			@include prefixer(transform, translateZ(-$truck_width_amount + rem) $vertical, $browsers);
		} @else {

			@if $inside == inside{
				@include passengerSide_inside;

			} @else {
				@include prefixer(transform, translateZ(-$truck_width_amount + rem), $browsers);
			}

		}

	}
}
@mixin driverSide($tire, $extra, $inside){
	@if $tire == rear{
		@if $extra == horizontal{
			@include prefixer(transform, translateZ(-$tire_move + rem ), $browsers);
		} @else if $extra == vertical {
			@include prefixer(transform, translateZ(-$tire_move), $browsers);
		} @else {
			@if $inside == inside{

//is rear tire, is normal,  is inside
				@include prefixer(transform, translateZ(1 - $tire_width_amount + rem ), $browsers);

			} @else {
//is rear tire, is normal,  is normal
				@include prefixer(transform, translateZ(-$tire_width_amount + rem ), $browsers);
			}
		}
	} @else {
		@if $extra == horizontal{
			@include prefixer(transform, translateZ(-$tire_move) $horizontal  , $browsers);
		} @else if $extra == vertical {
			@include prefixer(transform, translateZ(-$tire_move) $vertical, $browsers);
		} @else {
			@if $inside == inside{
//is front tire, is normal, is inside
					@include driverSide_inside;
				} @else {
					@include nullTransform;
				}
		}
	}
}
@mixin tireRotation(){
	@include prefixer(transform, rotate($tire_rotation) translateZ(0), $browsers);
}
